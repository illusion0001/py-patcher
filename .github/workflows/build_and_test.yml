name: Build and test PyPatcher

on:
  push:
    paths:
      - '.github/workflows/*'
      - 'src/**'
      - 'data/**'
  pull_request:
    paths:
      - '.github/workflows/*'
      - 'src/**'
      - 'data/**'
  workflow_dispatch:

jobs:
    tests:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest, windows-latest]

        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Setup Python
              uses: actions/setup-python@v2
              with:
                python-version: '3.10'

            - name: Install dependencies
              run:  pip install -r requirements.txt

            - name: Build application
              if: matrix.os == 'windows-latest'
              env:
                my_key: ${{ secrets.tests }}
              run: |
                echo "SHORT_SHA=$($env:GITHUB_SHA.SubString(0,7))" >> $env:GITHUB_ENV
                pip install tinyaes
                pip install https://github.com/pyinstaller/pyinstaller/archive/refs/heads/develop.zip
                pyinstaller --onefile --key "$env:my_key" --distpath . launcher.py

            - name: Copy files to root for artifacts
              run: |
                cp data/example.yml .

            - name: Run tests (.py)
              run: |
                echo ============================================
                echo Running Tests
                python launcher.py -f data/testdata/testdata.elf -c example.yml -v -ci -od
                python launcher.py -f data/testdata/testdata.elf -c example.yml -v -ci
                echo ============================================

            - name: Run tests (.exe)
              if: matrix.os == 'windows-latest'
              run: |
                echo ============================================
                echo Running Tests
                .\launcher.exe -f data/testdata/testdata.elf -c example.yml -v -ci -od
                .\launcher.exe -f data/testdata/testdata.elf -c example.yml -v -ci
                Format-Hex testdata.elf-patched/testdata.elf
                echo ============================================

            - name: Push app artifact - yml
              if: |
                matrix.os == 'windows-latest' &&
                github.ref == 'refs/heads/main'
              uses: actions/upload-artifact@v2
              with:
                name: patch-launcher
                path: |
                  README.md
                  example.yml
                  launcher.exe
                if-no-files-found: error
                if: github.ref == 'refs/heads/test'
                retention-days: 2

            - name: Upload binaries
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              if: |
                github.event_name == 'workflow_dispatch' &&
                matrix.os == 'windows-latest'
              run: |
                compress-archive launcher.exe, example.yml, README.md patch-launcher.zip
                gh release create $env:SHORT_SHA patch-launcher.zip --target $env:GITHUB_SHA -t "Release - $env:SHORT_SHA"
