name: Build and test PyPatcher

on:
  push:
    paths:
      - '.github/workflows/*'
      - 'src/**'
      - 'data/**'
  pull_request:
    paths:
      - '.github/workflows/*'
      - 'src/**'
      - 'data/**'
  workflow_dispatch:

jobs:
    build_and_test:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ ubuntu-latest, windows-latest ]

        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Setup Python
              uses: actions/setup-python@v3
              with:
                python-version: '3.x'

            - name: Install dependencies
              run: |
                python -m pip install -r requirements.txt
                python -m pip install tinyaes git+https://github.com/pyinstaller/pyinstaller.git

            - name: Get short SHA (win32)
              if: matrix.os == 'windows-latest'
              run: echo "SHORT_SHA=$($env:GITHUB_SHA.SubString(0,7))" >> $env:GITHUB_ENV
            - name: Get short SHA (linux)
              if: matrix.os == 'ubuntu-latest'
              run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

            - name: Build application
              env:
                my_key: ${{ secrets.tests }}
              run: pyinstaller --onefile --key "${{ env.my_key }}" -n py-patch --distpath . launcher.py

            - name: Run tests (.py)
              run: |
                cp data/*.yml .
                echo ============================================
                echo Running Tests
                python launcher.py -f data/testdata/fakeorbis.elf -c orbistest.yml -v -od
                python launcher.py -f data/testdata/fakeorbis.elf -c orbistest.yml -v
                python launcher.py -f data/testdata/fakecell.elf -c celltest.yml -v -od
                python launcher.py -f data/testdata/fakecell.elf -c celltest.yml -v
                python launcher.py -f data/testdata/fakecell.elf -c celltest.yml
                echo ============================================

            - name: Run tests (built executable)
              run: |
                echo ==========================================================
                echo Running Tests
                ./py-patch -f data/testdata/fakeorbis.elf -c orbistest.yml -v -od
                ./py-patch -f data/testdata/fakeorbis.elf -c orbistest.yml -v
                ./py-patch -f data/testdata/fakecell.elf -c celltest.yml -v -od
                ./py-patch -f data/testdata/fakecell.elf -c celltest.yml -v
                ./py-patch -f data/testdata/fakecell.elf -c celltest.yml
                echo ==========================================================

            - name: Push app artifact
              uses: actions/upload-artifact@v3
              with:
                name: py-patch-${{ matrix.os }}
                path: |
                  README.md
                  example.yml
                  py-patch
                  py-patch.exe
                retention-days: 7

            # Steps below are sus and has race conditions
            # todo: make them into separate jobs
            - name: Upload linux binaries for release
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              if: |
                github.event_name == 'workflow_dispatch' &&
                matrix.os == 'ubuntu-latest'
              run: |
                tar -czvf py-patch-linux.tar.gz py-patch example.yml README.md
                gh release create 1.0"${{ GITHUB.RUN_NUMBER }}" py-patch-linux.tar.gz --target $GITHUB_SHA -t 1.0"${{ GITHUB.RUN_NUMBER }}"

            - name: Upload win32 binaries for release
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              if: |
                github.event_name == 'workflow_dispatch' &&
                matrix.os == 'windows-latest'
              run: |
                compress-archive py-patch.exe, example.yml, README.md py-patch-windows.zip
                gh release upload 1.0"${{ GITHUB.RUN_NUMBER }}" py-patch-windows.zip
