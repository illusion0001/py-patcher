name: Build and test PyPatcher

on:
  push:
    paths:
      - '.github/workflows/*'
      - 'src/*'
      - 'src/*.py'
  pull_request:
    paths:
      - '.github/workflows/*'
      - 'src/*'
      - 'src/*.py'
  workflow_dispatch:

jobs:
    tests:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest, windows-latest]

        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Install dependencies
              run:  pip install -r requirements.txt

            - name: Build application
              if: matrix.os == 'windows-latest'
              run: |
                echo "SHORT_SHA=$($env:GITHUB_SHA.SubString(0,7))" >> $env:GITHUB_ENV
                pyinstaller --onefile --distpath . src/main.py

            - name: Copy files to root for artifacts
              run: |
                cp src/main.py .
                cp data/example.yml .

            - name: Run tests (.py)
              run: |
                echo ============================================
                echo Running Tests
                python main.py -f data/testdata/testdata.elf -c example.yml -v -od
                echo ============================================

            - name: Run tests (.exe)
              if: matrix.os == 'windows-latest'
              run: |
                echo ============================================
                echo Running Tests
                # todo, make py-patcher link with main
                rename-item .\main.exe .\py-patcher.exe
                .\py-patcher.exe -f data/testdata/testdata.elf -c example.yml -v -od
                echo ============================================

            - name: Push app artifact - yml
              if: |
                matrix.os == 'windows-latest' &&
                github.ref == 'refs/heads/main'
              uses: actions/upload-artifact@v2
              with:
                name: bin-patcher-yml
                path: |
                  example.yml
                  patcher-yml.exe

            - name: Upload binaries
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              if: |
                github.event_name == 'workflow_dispatch' &&
                matrix.os == 'windows-latest'
              run: |
                compress-archive patcher-yml.exe, example.yml bin-patcher-yml.zip
                gh release create $env:SHORT_SHA bin-patcher-yml.zip --target $env:GITHUB_SHA -t "Release - $env:SHORT_SHA"
