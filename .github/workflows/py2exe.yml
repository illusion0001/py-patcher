name: Build into packed windows exeutable

on:
  push:
    paths:
      - '.github/workflows/py2exe.yml'
      - '*.py'
  pull_request:
    paths:
      - '.github/workflows/py2exe.yml'
      - '*.py'
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Todo: cache this
      - name: Download pyinstaller
        run: pip install pyinstaller configparser

      - name: Build application
        run: |
          echo "SHORT_SHA=$($env:GITHUB_SHA.SubString(0,7))" >> $env:GITHUB_ENV
          pyinstaller --onefile --distpath . patcher-cfg.py
          pyinstaller --onefile --distpath . patcher.py

      - name: Push app artifact - cfg
        if: github.event_name != 'workflow_dispatch' # skip
        uses: actions/upload-artifact@v2
        with:
          name: bin-patcher-cfg
          path: |
            input.cfg
            patcher-cfg.exe
            patcher-cfg.py

      - name: Push app artifact - cli
        if: github.event_name != 'workflow_dispatch' # skip
        uses: actions/upload-artifact@v2
        with:
          name: bin-patcher
          path: |
            patcher.exe
            patcher.py

      - name: Upload binaries
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: github.event_name == 'workflow_dispatch' # manually push the release
        run: |
          compress-archive patcher-cfg.exe, input.cfg, patcher-cfg.py bin-patcher-cfg
          gh release create $env:SHORT_SHA bin-patcher-cfg --target $env:GITHUB_SHA -t "Release - $env:SHORT_SHA"

